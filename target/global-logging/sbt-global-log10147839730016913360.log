[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Amazon.com Inc. Java 17.0.6)
[debug] Load.defaultLoad until apply took 229.9203ms
[debug]           Load.loadUnit: plugins took 95.4754ms
[debug]           Load.loadUnit: defsScala took 0.3428ms
[debug] [Loading] Scanning directory F:\ING3-2024\BigData\project_scala_spark\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\ING3-2024\BigData\project_scala_spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.268999 ms
[debug]               Load.resolveProject(project_scala_spark-build) took 50.4691ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project_scala_spark-build, base: F:\ING3-2024\BigData\project_scala_spark\project, plugins: List(<none>))) took 104.5107ms
[debug] [Loading] Done in F:\ING3-2024\BigData\project_scala_spark\project, returning: (project_scala_spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 247.5645ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2768ms
[debug]         Load.loadUnit(file:/F:/ING3-2024/BigData/project_scala_spark/project/, ...) took 349.6809ms
[debug]       Load.apply: load took 548.0058ms
[debug]       Load.apply: resolveProjects took 6.2304ms
[debug]       Load.apply: finalTransforms took 73.097501ms
[debug]       Load.apply: config.delegates took 10.5282ms
[debug]       Load.apply: Def.make(settings)... took 608.103ms
[debug]       Load.apply: structureIndex took 128.9599ms
[debug]       Load.apply: mkStreams took 1.983ms
[info] loading project definition from F:\ING3-2024\BigData\project_scala_spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2546.2558ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory F:\ING3-2024\BigData\project_scala_spark
[debug]       Load.loadUnit: mkEval took 5.0801ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.634 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.1303ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: F:\ING3-2024\BigData\project_scala_spark, plugins: List(<none>))) took 7.994599ms
[debug] [Loading] Done in F:\ING3-2024\BigData\project_scala_spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3600.1031ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.529699ms
[debug]   Load.loadUnit(file:/F:/ING3-2024/BigData/project_scala_spark/, ...) took 6159.5182ms
[debug] Load.apply: load took 6180.649199ms
[debug] Load.apply: resolveProjects took 0.1368ms
[debug] Load.apply: finalTransforms took 18.508099ms
[debug] Load.apply: config.delegates took 0.520699ms
[debug] Load.apply: Def.make(settings)... took 98.974301ms
[debug] Load.apply: structureIndex took 39.6913ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to project_scala_spark (in build file:/F:/ING3-2024/BigData/project_scala_spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-8c8f825dd6cfcf6dd60c
[debug] Writing bsp connection file
[info] started sbt server
